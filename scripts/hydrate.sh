#!/bin/bash

find . -name "filter.ts" -exec sh -c 'echo """// auto-generated by ./scripts/hydrate.sh
export function filter<T>(callback: (item: T) => boolean, array: T[]): T[] {
	const result: T[] = [];
	for (const item of array) {
		if (callback(item)) {
			result.push(item);
		}
	}
	return result;
}""" > {}' \;

find . -name "map.ts" -exec sh -c 'echo """// auto-generated by ./scripts/hydrate.sh
export function map<T, U>(callback: (item: T) => U, array: T[]): U[] {
	const result: U[] = [];
	for (const item of array) {
		result.push(callback(item));
	}
	return result;
}""" > {}' \;

find . -name "routine.test.cjs" -exec sh -c 'echo """// auto-generated by ./scripts/hydrate.sh
const assert = require(\"node:assert\");
const coreEs2022 = require(\"@level-ones/core-es2022\");

assert.strictEqual(coreEs2022.default, \"core-es2022\");

assert.deepStrictEqual(
	coreEs2022.filter((x) => x % 2 === 0, [1, 2, 3, 4, 5]),
	[2, 4],
);

assert.deepStrictEqual(
	coreEs2022.map((x) => x * 2, [1, 2, 3, 4, 5]),
	[2, 4, 6, 8, 10],
);""" > {}' \;

find . -name "routine.test.mjs" -exec sh -c 'echo """// auto-generated by ./scripts/hydrate.sh
import * as assert from \"node:assert\";
import coreEs2022Default, * as coreEs2022 from \"@level-ones/core-es2022\";

assert.strictEqual(coreEs2022Default, \"core-es2022\");

assert.deepStrictEqual(
	coreEs2022.filter((x) => x % 2 === 0, [1, 2, 3, 4, 5]),
	[2, 4],
);

assert.deepStrictEqual(
	coreEs2022.map((x) => x * 2, [1, 2, 3, 4, 5]),
	[2, 4, 6, 8, 10],
);""" > {}' \;
